class Solution:
    def longestSubarray(self, nums: List[int], limit: int) -> int:
        l = res = 0
        decreasing_queue, increasing_queue = deque(), deque()
        for r in range(len(nums)):
            while decreasing_queue and nums[r] > decreasing_queue[-1]:
                decreasing_queue.pop()
            decreasing_queue.append(nums[r])
            while increasing_queue and nums[r] < increasing_queue[-1]:
                increasing_queue.pop()
            increasing_queue.append(nums[r])

            while decreasing_queue[0] - increasing_queue[0] > limit:
                if nums[l] == increasing_queue[0]:
                    increasing_queue.popleft()
                elif nums[l] == decreasing_queue[0]:
                    decreasing_queue.popleft()
                l += 1
            res = max(res, r + 1 - l)

        return res
