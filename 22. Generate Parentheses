# Solution link on LeetCode: https://leetcode.com/problems/generate-parentheses/solutions/6978075/very-easy-efficient-backtracking-approac-155u/

class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        res = []
        def func(s, open, close):
            if open == close == n:
                res.append(s)
                return
            if close < open:
                func(s + ')', open, close + 1)
            if open < n:
                func(s + '(', open + 1, close)
        func('(', 1, 0)
        return res
        
