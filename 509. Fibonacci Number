# Iterative approach:
class Solution:
    def fib(self, n: int) -> int:
        if n < 2:
            return n
        n1, n2 = 0, 1
        for _ in range(n-1):
            n1, n2 = n2, n1 + n2
        return n2


# Recursive Approach:
class Solution:
    def fib(self, n: int) -> int:
        return self.fib(n - 1) + self.fib(n - 2) if n > 1 else n

# DP
class Solution:
    def fib(self, n: int) -> int:
        if n < 2:
            return n
        dp = [0] * (n + 1)
        dp[1] = 1
        for i in range(2, n + 1):
            dp[i] = dp[i - 1] + dp[i - 2]
        return dp[n]
