# Solution on LeetCode: https://leetcode.com/problems/pascals-triangle/solutions/7033083/efficient-row-by-row-construction-beats-fju8p/

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        res = [[1]]
        for length in range(1, numRows):
            res.append([1])
            for i in range(1, length):
                res[-1].append(res[-2][i-1] + res[-2][i])
            res[-1].append(1)
        return res
