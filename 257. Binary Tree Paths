# Solution on LeetCode: https://leetcode.com/problems/binary-tree-paths/solutions/6961031/efficient-simple-dfs-traversal-beats-100-xrnc/

class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        res, path = [], ''
        def dfs(node):
            nonlocal path, res
            path += f'->{node.val}'
            if not node.left and not node.right:
                res.append(path[2:])
                
            if node.left:
                dfs(node.left)
            if node.right:
                dfs(node.right)
            length = len(str(node.val))
            path = path[:-length-2]

        dfs(root)
        return res
