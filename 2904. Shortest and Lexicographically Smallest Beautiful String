class Solution:
    def shortestBeautifulSubstring(self, s: str, k: int) -> str:
        res, N = '', len(s)
        count = l = 0
        for r in range(N):
            if s[r] == '1':
                count += 1
            while count > k:
                if s[l] == '1':
                    count -= 1
                l += 1
            while l < N and s[l] == '0':
                l += 1
            if count == k and s[r] == '1':
                if not res:
                    res = s[l: r + 1]
                if len(s[l: r + 1]) < len(res):
                    res = s[l: r + 1]
                elif len(res) == len(s[l: r + 1]):
                    res = min(res, s[l: r + 1])
        return res
