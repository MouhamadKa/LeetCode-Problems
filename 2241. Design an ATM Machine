# Solution on LeetCode: https://leetcode.com/problems/design-an-atm-machine/solutions/7027477/efficient-atm-machine-design-with-greedy-a3ty/

class ATM:

    def __init__(self):
        self.denominations = (20, 50, 100, 200, 500)
        self.available = [0] * 5

    def deposit(self, banknotesCount: List[int]) -> None:
        for i, amount in enumerate(banknotesCount):
            self.available[i] += amount

    def withdraw(self, amount: int) -> List[int]:
        res = [0] * 5
        for i in range(4, -1, -1):
            if self.available[i]:
                    res[i] = min(amount // self.denominations[i], self.available[i])
                    self.available[i] -= res[i]
                    amount -= self.denominations[i] * res[i]

        if not amount:
            return res
        for i in range(5):
            self.available[i] += res[i]
        return [-1]
